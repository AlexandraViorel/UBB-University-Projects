     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 13                          b db 13h
    15 00000001 06                          c db 06h
    16 00000002 5001                        e dw 150h
    17 00000004 3402                        f dw 234h
    18 00000006 4501                        g dw 145h
    19 00000008 03                          a1 db 3h
    20 00000009 05                          a2 db 5h
    21                                      
    22                                  ; our code starts here
    23                                  segment code use32 class=code
    24                                      start:
    25                                          ; ...
    26                                          ; [(e+f-g)+(b+c)*3]/5
    27 00000000 668B1D[02000000]                mov BX, [e]
    28 00000007 66031D[04000000]                add BX, [f]
    29 0000000E 662B1D[06000000]                sub BX, [g]
    30 00000015 A0[00000000]                    mov AL, [b]
    31 0000001A 0205[01000000]                  add AL, [c]
    32 00000020 F625[08000000]                  mul byte[a1]
    33 00000026 6601D8                          add AX, BX
    34 00000029 F635[09000000]                  div byte[a2]
    35                                          
    36                                      
    37                                          ; exit(0)
    38 0000002F 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    39 00000031 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
