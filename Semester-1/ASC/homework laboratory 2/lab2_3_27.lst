     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 0501                        a dw 105h
    15 00000002 2003                        b dw 320h
    16 00000004 3402                        c dw 234h
    17 00000006 0101                        d dw 101h
    18                                  
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22                                          ; ...
    23                                          ; a + b - (c + d) + 100h
    24 00000000 66A1[00000000]                  mov AX, [a] ; AX = a
    25 00000006 660305[02000000]                add AX, [b] ; AX = a + b
    26 0000000D 668B1D[04000000]                mov BX, [c] ; BX = c
    27 00000014 66031D[06000000]                add BX, [d] ; BX = c + d
    28 0000001B 6629D8                          sub AX, BX  ; AX = (a + b) - (c + d)
    29 0000001E 66050001                        add AX, 100h ; AX = a + b - (c + d) + 100h
    30                                      
    31                                          ; exit(0)
    32 00000022 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    33 00000024 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
