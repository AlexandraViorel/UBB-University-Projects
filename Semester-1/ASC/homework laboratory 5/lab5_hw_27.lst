     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 010306020302                s1 db 1, 3, 6, 2, 3, 2
    15                                      l1 equ $ - s1
    16 00000006 060308010205                s2 db 6, 3, 8, 1, 2, 5
    17 0000000C 00<rept>                    d times l1 db 0 ; we reserve l1 bytes for the destination string and initialize it with 0
    18                                  
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22                                          ; ...
    23                                          ;Two byte strings S1 and S2 of the same length are given. Obtain the string D where 
    24                                          ;each element is the difference of the corresponding elements from S1 and S2
    25                                          
    26 00000000 B906000000                      mov ECX, l1 ; we put the length l1 in ECX in order to make the loop
    27                                          ; Remark: the length of the strings s1 and s2 are the same, so we only calculate and use one of it
    28 00000005 BE00000000                      mov ESI, 0
    29 0000000A E317                            jecxz endFor
    30                                          Repeat:
    31 0000000C 8A86[00000000]                      mov AL, [s1 + ESI]
    32 00000012 8A9E[06000000]                      mov BL, [s2 + ESI]
    33 00000018 28D8                                sub AL, BL
    34 0000001A 8886[0C000000]                      mov [d + ESI], AL
    35 00000020 46                                  inc ESI
    36 00000021 E2E9                            loop Repeat
    37                                          endFor:
    38                                      
    39                                          ; exit(0)
    40 00000023 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    41 00000025 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
