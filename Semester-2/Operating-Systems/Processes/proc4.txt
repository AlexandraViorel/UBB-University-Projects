proc 4

// A.c



#include <stdio.h>
#include <unistd.h>
#include <stdlib.h>
#include <sys/stat.h>
#include <sys/types.h>
#include <sys/wait.h>
#include <fcntl.h>

int main(int argc, char** argv) {
        mkfifo(argv[1], 0600);
        int fd_fifo = open(argv[1], O_WRONLY);
        int p1p2[2];
        pipe(p1p2);
        FILE* fptr;
        fptr = fopen("in.txt", "r");
        int f, f1, n;
        char x, c;

        f = fork();
        if (f == 0){
                close(p1p2[0]);
                printf("n= ");
                scanf("%d", &n);
                int i;
                for (i=0; i<n; i++){
                        x = fgetc(fptr);
                }
                write(p1p2[1], &x, sizeof(char));
                close(p1p2[1]);
                exit(0);
        }
        else {
                f1 = fork();
                if (f1 == 0){
                        close(p1p2[1]);
                        read(p1p2[0], &c, sizeof(char));
                        if (('a' <= c && c <= 'z') || ('A' <= c && c<= 'Z')) {
                                printf("letter\n");
                        }
                        else if ('0' <= c && c <= '9') {
                                printf("number\n");
                        }
                        else {
                                printf("other\n");
                        }
                        write(fd_fifo, &c, sizeof(char));
                        close(p1p2[0]);
                        exit(0);

                }
                else {
                        close(p1p2[0]);
                        close(p1p2[1]);
                }
                wait(0);
        }

        wait(0);
        close(fd_fifo);


        return 0;
}


// B.c

#include <stdio.h>
#include <unistd.h>
#include <stdlib.h>
#include <sys/stat.h>
#include <sys/types.h>
#include <sys/wait.h>
#include <fcntl.h>

int main(int argc, char** argv) {
        int fd_fifo = open(argv[1], O_RDONLY);
        char c;
        read(fd_fifo, &c, sizeof(char));
        printf("ascii code: %d\n", c);
        close(fd_fifo);
        unlink(argv[1]);
        return 0;
}
